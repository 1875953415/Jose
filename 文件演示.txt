文件演示

package com;

import java.io.File;

public class FileDemo {
	public static void main(String[] args) {
		File f=new File("c:\\tomcat");
		int n=0;
		File f1=ergodicFile(f, n);
	}
	
	public static File ergodicFile(File f, int n){
		

		
		// 还是文件夹
		if(f.isDirectory()){

			for (int i = 0; i < n; i++) {			// 空格控制
				System.out.print("   ");
			}
			n++;									// 文件夹深度
			
			System.out.println("-"+f.getName());	// 输出文件夹名
			System.out.println("");					// 文件夹之间用空行隔开
			
			File f1[]=f.listFiles();
			
			for (int i = 0; i < f1.length; i++) {	// 继续遍历
				ergodicFile(f1[i], n);
			}
		}
		// 不是文件夹
		else{
			for (int i = 0; i < n; i++) {			// 格式控制
				System.out.print("   ");
			}
			System.out.print("   ");
			System.out.println(f.getName());		// 输出文件名
		}
		
		return f;
	}
}
文件的打开
package com;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class FileOperation {
	
	public static void main(String[] args) {
		FileOperation FO = new FileOperation();
		File f=new File("c:\\a.txt");
		String fileCon=FO.readFileCon(f);
		System.out.println(fileCon);
		
		f = new File("c:\\b.txt");
		String con = "123456789";
		FO.writeFileCon(con, f);
		
		f = new File("c:\\a.txt");
		FO.copyFileCon(f);
		
		FO.divice(f);
	}
	
	public String readFileCon(File f){
		String con="";
		FileReader fr = null;
		BufferedReader br = null;
		
		try {
			fr = new FileReader(f);
			br = new BufferedReader(fr);
			
			while(br.ready()){
				con += br.readLine() + "\r\n";
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally{
			try {
				br.close();
				fr.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		
		return con;
	}
	
	public void writeFileCon(String con, File f){
		FileWriter fw = null;
		BufferedWriter bw = null;
		
		try {
			fw = new FileWriter(f);
			bw = new BufferedWriter(fw);
			bw.write(con);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally{
			try {
				bw.close();
				fw.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	public void copyFileCon(File f1){
		FileReader fr = null;
		BufferedReader br = null;
		File f = null;
		FileWriter fw = null;
		BufferedWriter bw = null;
		
		try {
			fr = new FileReader(f1);
			br = new BufferedReader(fr);
			f = new File("c:\\c.txt");
			fw = new FileWriter(f);
			bw = new BufferedWriter(fw);
			
			while(br.ready()){
				String con = br.readLine()+"\r\n";
				bw.write(con);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally{
			try {
				bw.close();
				fw.close();
				br.close();
				fr.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		
	}
	
	public void divice(File f){
		FileReader fr = null;
		FileWriter fw = null;
		BufferedReader br = null;
		BufferedWriter bw = null;
		File f1 = null;
		int i=1 , len;
		try {
			fr = new FileReader(f);
			br = new BufferedReader(fr);
			f1 = new File("c:\\d.txt"+"i");
			fw = new FileWriter(f1);
			bw = new BufferedWriter(fw);
			String con = "";
			
			while(br.ready()){
				con += br.readLine() + "\r\n";
			}
			len = con.length()/4;
			
			for(i=0; i< 4; i++){
				String con1 = con.substring(i*len,(i+1)*len - 1);
				f1 = new File("c:\\d"+i+".txt");
				writeFileCon(con1, f1);
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
}